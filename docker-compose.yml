services:

  dataprepper:
    depends_on:
      - opensearch
    container_name: dataprepper
    image: opensearchproject/data-prepper:2.8.0
    ports:
      - "4900:4900"
      - "2021:2021"
      - "21890:21890"
    volumes:
      - ./dataprepper/pipelines.yaml:/usr/share/data-prepper/pipelines/pipelines.yaml
      - ./dataprepper/data-prepper-config.yaml:/usr/share/data-prepper/config/data-prepper-config.yaml 

  middleware:
    container_name: middleware
    build: ./middleware
    ports:
      - "9090:9090"
    volumes:
      - ./middleware:/python-docker/
  
  mysql:
    container_name: mysql
    image: amd64/mysql:8
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=password
    volumes:
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  opensearch:
    container_name: opensearch
    build: ./opensearch/.
    environment:
      discovery.type: single-node
      node.name: opensearch
      plugins.security.disabled: "true"
      http.cors.enabled: true
      # Warning: this is opening it up to all cross domains
      http.cors.allow-origin: "*"
      http.cors.allow-methods: OPTIONS,HEAD,GET,POST,PUT,DELETE
      http.cors.allow-credentials: true
      http.cors.allow-headers: X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization,test,access-control-allow-headers,x-search-query,X-Search-Id,X-Search-Filters,X-ubi-query-id,X-ubi-store,X-ubi-user-id,X-ubi-session-id,x-search-client,Access-Control-Expose-Headers
      # indexes faster if we don't log each row (i.e. logger.level: warn)
      logger.level: info
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: Mysupersecretpassword_123
      ubi.dataprepper.url: "http://dataprepper:2021/log/ingest"
      OPENSEARCH_JAVA_OPTSL: -Xms1g -Xmx2g
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536      
    deploy:
      resources:
        limits:
          memory: 2g  # Set your desired memory limit
        reservations:
          memory: 1g  # Optional: reserve memory for the container        
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "wget", "http://localhost:9200" ]
      interval: 30s
      timeout: 10s
      retries: 50

  opensearch-dashboards:
    build: ./opensearch-dashboards/.
    container_name: opensearch-dashboards
    ports:
      - 5601:5601
    expose:
      - 5601
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: true
    depends_on:
      - opensearch

  chorus-ui:
    container_name: chorus_ui
    build: ./chorus_ui/.
    depends_on:
      - opensearch
    volumes:
      - './chorus_ui:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - 4000:3000

  quepid:
    container_name: quepid
    image: o19s/quepid:7.15.1
    ports:
      - 3000:3000
    environment:
      - PORT=3000
      - RACK_ENV=production
      - RAILS_ENV=production
      - DATABASE_URL=mysql2://root:password@mysql:3306/quepid
      - REDIS_URL=redis://redis:6379/1
      - FORCE_SSL=false
      - MAX_THREADS=2
      - WEB_CONCURRENCY=2
      - RAILS_LOG_TO_STDOUT=true
      - RAILS_SERVE_STATIC_FILES=true
      - SECRET_KEY_BASE=chorus_key
      - TC_URL=
      - PRIVACY_URL=
      - COOKIES_URL=
      - EMAIL_MARKETING_MODE=false
      - EMAIL_PROVIDER=
      - QUEPID_DEFAULT_SCORER=DCG@10
      - SIGNUP_ENABLED=true
    links:
      - mysql
      - redis

  redis:
    container_name: quepid_redis
    image: redis:7.0.11-alpine
    ports:
      - 6379:6379
